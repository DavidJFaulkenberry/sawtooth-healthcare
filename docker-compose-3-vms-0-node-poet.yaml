version: '3'


volumes:
  poet-shared:

services:

  healthcare-processor-0:
    build:
      context: .
      dockerfile: processor/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: healthcare-tp
    container_name: healthcare-processor-0
    volumes:
      - ./:/project/sawtooth_healthcare
      - /project/sawtooth_healthcare/build
    depends_on:
      - healthcare-cli
    command: |
      bash -c "
        sleep 1 &&
        echo '--- Building healthcare-tp-0 by docker-compose---\n' &&
        init-healthcare-tp.sh &&
        healthcare-tp -v -C tcp://validator-0:4004 &&
        tail -f /dev/null
      "

  consent-processor-0:
    build:
      context: .
      dockerfile: consent_processor/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: consent-tp
    container_name: consent-processor-0
    volumes:
      - ./:/project/sawtooth_healthcare
    command: |
      bash -c "
        sleep 1 &&
        echo '--- Building consent-tp-0 by docker-compose---\n' &&
        init-consent-tp.sh &&
        consent-tp -v -C tcp://validator-0:4004 &&
        tail -f /dev/null
               "

  payment-processor-0:
    build:
      context: .
      dockerfile: payment_processor/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: payment-tp
    container_name: payment-processor-0
    volumes:
      - ./:/project/sawtooth_healthcare
    depends_on:
      - insurance-processor-0
    command: |
      bash -c "
        sleep 1 &&
        echo '--- Building payment-tp-0 by docker-compose---\n' &&
        init-payment-tp.sh &&
        payment-tp -v -C tcp://validator-0:4004 &&
        tail -f /dev/null
               "

  insurance-processor-0:
    build:
      context: .
      dockerfile: insurance_processor/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: insurance-tp
    container_name: insurance-processor-0
    volumes:
      - ./:/project/sawtooth_healthcare
    depends_on:
      - consent-processor-0
    command: |
      bash -c "
        sleep 1 &&
        echo '--- Building insurance-tp-0 by docker-compose---\n' &&
        init-insurance-tp.sh &&
        insurance-tp -v -C tcp://validator-0:4004 &&
        tail -f /dev/null
               "

  healthcare-cli:
    build:
      context: .
      dockerfile: cli/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: healthcare-cli
    container_name: healthcare-client
    volumes:
      - ./:/project/sawtooth_healthcare
      - /project/sawtooth_healthcare/build
    command: |
      bash -c "
        sleep 1 &&
        echo '--- Building healthcare-cli by docker-compose---\n' &&
        init-healthcare-cli.sh &&
        tail -f /dev/null
      "

  healthcare-rest-api-0:
    build:
      context: .
      dockerfile: rest_api/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: healthcare-rest-api
    container_name: healthcare-rest-api-0
    volumes:
      - .:/project/sawtooth_healthcare
      - /project/sawtooth_healthcare/build
    ports:
      - '8040:8000'
    depends_on:
      - healthcare-processor-0
    command: |
      bash -c "
        sleep 3 &&
        echo '--- Building healthcare-rest-api-0 by docker-compose---' &&
        init-healthcare-rest-api.sh &&
        healthcare-rest-api --host healthcare-rest-api-0 --validator tcp://validator-0:4004 &&
        tail -f /dev/null
               "

  healthcare-web-app-0:
    build:
      context: .
      dockerfile: web/Dockerfile
    image: healthcare-web-app
    user: "node"
    container_name: healthcare-web-app-0
    #    volumes:
    #      - .:/project/sawtooth_healthcare
    volumes:
      - ./web:/home/node/app
      - /home/node/app/node_modules
    expose:
      - 8080
    ports:
      - '8041:8080'
    depends_on:
      - healthcare-rest-api-0
    command: |
      sh -c "
      echo '--- Starting healthcare-web-app-0 by docker-compose---' &&
      npm run start-0
      "

  settings-tp-0:
    image: hyperledger/sawtooth-settings-tp:1.1
    container_name: sawtooth-settings-tp-0
    depends_on:
      - validator-0
    command: settings-tp -vv --connect tcp://validator-0:4004

  poet-engine-0:
    image: hyperledger/sawtooth-poet-engine:1.1
    container_name: sawtooth-poet-engine-0
#    depends_on:
#      - validator-0
    volumes:
      - poet-shared:/poet-shared
    command: "bash -c \"\
        if [ ! -f /poet-shared/poet-enclave-measurement ]; then \
            poet enclave measurement >> /poet-shared/poet-enclave-measurement; \
        fi && \
        if [ ! -f /poet-shared/poet-enclave-basename ]; then \
            poet enclave basename >> /poet-shared/poet-enclave-basename; \
        fi && \
        if [ ! -f /poet-shared/simulator_rk_pub.pem ]; then \
            cp /etc/sawtooth/simulator_rk_pub.pem /poet-shared; \
        fi && \
        while [ ! -f /poet-shared/validator-0/keys/validator.priv ]; do sleep 1; done && \
        cp -a /poet-shared/validator-0/keys /etc/sawtooth && \
        poet registration create -k /etc/sawtooth/keys/validator.priv -o /poet-shared/poet.batch && \
        poet-engine -C tcp://validator-0:5050 --component tcp://validator-0:4004 \
    \""

  poet-validator-registry-tp-0:
    image: hyperledger/sawtooth-poet-validator-registry-tp:1.1
    container_name: sawtooth-poet-validator-registry-tp-0
    expose:
      - 4004
    command: poet-validator-registry-tp -C tcp://validator-0:4004
#    environment:
#      PYTHONPATH: /project/sawtooth-core/consensus/poet/common
#    stop_signal: SIGKILL

  sawtooth-rest-api-0:
    image: hyperledger/sawtooth-rest-api:1.1
    container_name: sawtooth-rest-api-0
    expose:
      - 8008
    ports:
      - '8043:8008'
    depends_on:
      - validator-0
    entrypoint: |
      sawtooth-rest-api -vv
        --connect tcp://validator-0:4004
        --bind sawtooth-rest-api-0:8008

  validator-0:
    image: hyperledger/sawtooth-validator:1.1
    container_name: sawtooth-validator-0
    expose:
      - 4004
      - 5050
      - 8800
    ports:
      - '8044:8800'
    volumes:
      - poet-shared:/poet-shared
    command: "bash -c \"\
        if [ ! -f /poet-shared/network_status.txt ]; then \
          echo '--- First run setup started... ---\n'; \
          sawadm keygen --force; \
          mkdir -p /poet-shared/validator-0 || true; \
          cp -a /etc/sawtooth/keys /poet-shared/validator-0/ ; \
          while [ ! -f /poet-shared/poet-enclave-measurement ]; do sleep 1; done; \
          while [ ! -f /poet-shared/poet-enclave-basename ]; do sleep 1; done; \
          while [ ! -f /poet-shared/poet.batch ]; do sleep 1; done; \
          cp /poet-shared/poet.batch / ; \
          sawset genesis \
            -k /etc/sawtooth/keys/validator.priv \
            -o config-genesis.batch ; \
          sawset proposal create \
            -k /etc/sawtooth/keys/validator.priv \
            sawtooth.consensus.algorithm.name=poet \
            sawtooth.consensus.algorithm.version=0.1 \
            sawtooth.poet.report_public_key_pem=\
            \\\"$$(cat /poet-shared/simulator_rk_pub.pem)\\\" \
            sawtooth.poet.valid_enclave_measurements=$$(cat /poet-shared/poet-enclave-measurement) \
            sawtooth.poet.valid_enclave_basenames=$$(cat /poet-shared/poet-enclave-basename) \
            -o config.batch ; \
          sawset proposal create \
            -k /etc/sawtooth/keys/validator.priv \
               sawtooth.poet.target_wait_time=5 \
               sawtooth.poet.initial_wait_time=25 \
               sawtooth.publisher.max_batches_per_block=100 \
            -o poet-settings.batch ; \
          sawadm genesis \
            config-genesis.batch config.batch poet.batch poet-settings.batch ; \
          echo Done > /poet-shared/network_status.txt ; \
          echo '--- First run setup completed... ---\n' ; \
        else \
          echo '--- First run setup skipped... ---\n' ; \
        fi && \
        sawtooth-validator -v \
          --bind network:tcp://eth0:8800 \
          --bind component:tcp://eth0:4004 \
          --bind consensus:tcp://eth0:5050 \
          --endpoint tcp://192.168.1.11:8044 \
          --peering static \
          --scheduler serial \
          --network-auth trust
    \""
  #    environment:
  #      PYTHONPATH: "/project/sawtooth-core/consensus/poet/common:\
#        /project/sawtooth-core/consensus/poet/simulator:\
#        /project/sawtooth-core/consensus/poet/core"
#    stop_signal: SIGKILL
